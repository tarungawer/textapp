{"version":3,"sources":["Components/Navbar.js","Components/TextFrom.js","Components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","name","onClick","document","body","style","backgroundColor","getElementById","for","toggleMode","htmlFor","TextFrom","useState","text","setText","color","heading","rows","value","onChange","event","target","newText","toUpperCase","showAlert","toLowerCase","myArray","split","console","log","length","newArray","i","firstCap","charAt","slice","finalText","toString","replace","select","navigator","clipboard","writeText","join","filter","n","count","counter","defaultProps","aboutTextApp","Alert","alert","role","word","lower","capitalize","msg","App","setMode","setAlert","message","setTimeout","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.98bd336a.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom';\r\n\r\nexport default function Navbar(props) {\r\n  const darkThemeRed = () => {\r\n    if (props.mode === 'dark')\r\n    {\r\n      document.body.style.backgroundColor = 'red';\r\n      document.getElementById('btn11').style.backgroundColor = 'orange';\r\n      document.getElementById('btn12').style.backgroundColor = 'orange';\r\n      document.getElementById('btn13').style.backgroundColor = 'orange';\r\n      document.getElementById('btn14').style.backgroundColor = 'orange';\r\n      document.getElementById('btn15').style.backgroundColor = 'orange';\r\n      document.getElementById('btn16').style.backgroundColor = 'orange';\r\n    }\r\n  }\r\n\r\n  const darkThemeOrange = () => {\r\n    if (props.mode === 'dark')\r\n    {\r\n      document.body.style.backgroundColor = 'orange';\r\n      document.getElementById('btn11').style.backgroundColor = 'green';\r\n      document.getElementById('btn12').style.backgroundColor = 'green';\r\n      document.getElementById('btn13').style.backgroundColor = 'green';\r\n      document.getElementById('btn14').style.backgroundColor = 'green';\r\n      document.getElementById('btn15').style.backgroundColor = 'green';\r\n      document.getElementById('btn16').style.backgroundColor = 'green';\r\n    }\r\n  }\r\n\r\n  const darkThemeGreen = () => {\r\n    if (props.mode === 'dark')\r\n    {\r\n      document.body.style.backgroundColor = 'green';\r\n      document.getElementById('btn11').style.backgroundColor = 'red';\r\n      document.getElementById('btn12').style.backgroundColor = 'red';\r\n      document.getElementById('btn13').style.backgroundColor = 'red';\r\n      document.getElementById('btn14').style.backgroundColor = 'red';\r\n      document.getElementById('btn15').style.backgroundColor = 'red';\r\n      document.getElementById('btn16').style.backgroundColor = 'red';\r\n    }\r\n  }\r\n\r\n\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n  <div className=\"container-fluid\">\r\n    <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n        </li>\r\n        {/* <li className=\"nav-item\">\r\n          <Link className=\"nav-link\" to=\"/about\">{props.aboutTextApp}</Link>\r\n        </li> */}\r\n      </ul>\r\n\r\n\r\n      <div className=\"form-check mx-1\">\r\n                <input className=\"form-check-input\" type=\"radio\" name=\"flexRadioDefault\" id=\"flexRadioDefault1\" onClick={darkThemeRed}/>\r\n                <label className={`form-check-label text-${props.mode === 'light' ? 'dark' : 'light'}`} for=\"flexRadioDefault1\">\r\n                  Red\r\n                </label>\r\n      </div>\r\n      <div className=\"form-check mx-1\">\r\n                <input className=\"form-check-input\" type=\"radio\" name=\"flexRadioDefault\" id=\"flexRadioDefault2\" onClick={darkThemeGreen}/>\r\n                <label className={`form-check-label text-${props.mode === 'light' ? 'dark' : 'light'}`} for=\"flexRadioDefault2\">\r\n                  Green\r\n                </label>\r\n      </div>\r\n      <div className=\"form-check mx-1\">\r\n                <input className=\"form-check-input\" type=\"radio\" name=\"flexRadioDefault\" id=\"flexRadioDefault3\" onClick={darkThemeOrange}/>\r\n                <label className={`form-check-label text-${props.mode === 'light' ? 'dark' : 'light'}`} for=\"flexRadioDefault3\">\r\n                  Orange\r\n                </label>\r\n      </div>\r\n\r\n        <div className={`form-check form-switch text-${props.mode === 'light' ? 'dark' : 'light'} mx-3`}>\r\n          <input className=\"form-check-input\" type=\"checkbox\" id=\"flexSwitchCheckDefault\" onClick={props.toggleMode} />\r\n          <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">{props.mode === 'dark' ? 'Disable' : 'Enable'} Dark Mode</label>\r\n        </div>\r\n    </div>\r\n  </div>\r\n  </nav>\r\n    )\r\n} \r\nNavbar.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\naboutTextApp: PropTypes.string.isRequired,\r\n}\r\n\r\nNavbar.defaultProps = {\r\n    title: 'Set Title Here',\r\n    aboutTextApp: 'Set About Here'\r\n}","import React, {useState} from 'react'\r\n\r\nexport default function TextFrom(props) {\r\n        const handleUpper = ()=>{\r\n        // console.log(\"UpperCase was Clicked\" + text);\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to UpperCase!\", \"success\");\r\n        }\r\n\r\n        const handleLower = ()=>{\r\n            let newText = text.toLowerCase();\r\n            setText(newText);\r\n            props.showAlert(\"Converted to LowerCase!\", \"success\");\r\n            }\r\n\r\n        const handleClear = ()=>{\r\n            let newText = '';\r\n            setText(newText);\r\n            props.showAlert(\"Text Cleared!\", \"success\");\r\n            }\r\n    \r\n            // to capitalize the first character of any string\r\n        const capitalize = () => {\r\n            let myArray = text.split(' ');\r\n            console.log(myArray.length);\r\n            let newArray = [];\r\n            console.log(myArray);\r\n            for (let i = 0; i < myArray.length; i++) {\r\n                let firstCap = myArray[i].charAt(0).toUpperCase();\r\n                newArray[i] = firstCap + myArray[i].slice(1);\r\n                }\r\n            let firstCapText = newArray.toString();\r\n            let finalText = firstCapText.replace(/,/g, \" \");\r\n            console.log(newArray);\r\n            setText(finalText);    \r\n            props.showAlert(\"First letters capitalised!\", \"success\");\r\n\r\n            }\r\n            \r\n        const handleCopy = () => {\r\n            let text = document.getElementById(\"mybox\");\r\n            text.select();\r\n            navigator.clipboard.writeText(text.value);\r\n            props.showAlert(\"Text Copied!\", \"success\");\r\n        }\r\n\r\n        const handleExtraSpaces = () => {\r\n            let newText= text.split(/[ ]+/);\r\n            setText(newText.join(\" \"))\r\n            props.showAlert(\"Extra spaces removed!\", \"success\");\r\n        }\r\n\r\n    \r\n        const handleOnChange = (event)=>{\r\n        // console.log(\"On Change\");\r\n        setText(event.target.value);\r\n        \r\n        }\r\n\r\n        const counter = () => {\r\n        // Initialize the word counter\r\n        let count = 0;\r\n  \r\n        // Split the words on each\r\n        // space character \r\n        let split = text.split(/\\n| /);\r\n\r\n        // Loop through the words and \r\n        // increase the counter when \r\n        // each split word is not empty\r\n        for (let i = 0; i < split.length; i++) {\r\n            if (split[i] !== \"\") {\r\n                count += 1;\r\n            }\r\n            // console.log(\"hi\" + text.split(/\\n| /));\r\n        }\r\n\r\n        // Display it as output\r\n        return count;       \r\n        }\r\n\r\n        // const [wordCount, setWordCount] = useState(0)\r\n        \r\n\r\n        const [text, setText] = useState(\"\");\r\n    return (\r\n        <>\r\n        <div className=\"container\" style={{color: props.mode === 'dark' ? 'white' : 'black'}}>\r\n            <h1>{props.heading}</h1>\r\n            <div className=\"mb-3\">\r\n            <textarea className=\"form-control\" id=\"mybox\" rows=\"10\" style={{backgroundColor: props.mode === 'dark' ? 'grey' : 'white', color: props.mode === 'dark' ? 'white' : 'black'}} value={text} onChange={handleOnChange}></textarea>\r\n            </div>\r\n            <button id=\"btn11\" className=\"btn btn-primary mx-2\" onClick={handleUpper}>Convert to Uppercase</button>\r\n            <button id=\"btn12\" className=\"btn btn-primary mx-2\" onClick={handleLower}>Convert to Lowercase</button>\r\n            <button id=\"btn13\" className=\"btn btn-primary mx-2\" onClick={handleClear}>Clear Text</button>\r\n            <button id=\"btn14\" className=\"btn btn-primary mx-2\" onClick={capitalize}>Capital First Letter</button>\r\n            <button id=\"btn15\" className=\"btn btn-primary mx-2\" onClick={handleCopy}>Copy Text</button>\r\n            <button id=\"btn16\" className=\"btn btn-primary mx-2\" onClick={handleExtraSpaces}>Remove Extra Spaces</button>\r\n            \r\n        </div>\r\n        <div className=\"container my-3\"  style={{color: props.mode === 'dark' ? 'white' : 'black'}}>\r\n            <h2>Words and Characters in your text</h2>\r\n            <p>{text.split(/\\n| /).filter(function(n) { return n !== ''}).length} words {text.length} character</p>\r\n            {/* {text.length === 0 ? 0 : text.trim().split(/\\n| /).length} */}\r\n            {/* this also works */}\r\n            <p>{0.008 * counter()} Minutes Read</p>\r\n            <h2>Preview</h2>\r\n            <p>{text.length > 0 ? text : \"Enter some text in the TextBox to preview it here\"}</p>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    const capitalize = (word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n    return (\r\n        props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n           <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg}\r\n            {/* <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","import './App.css';\n// import About from './Components/About';\nimport Navbar from './Components/Navbar';\nimport TextFrom from './Components/TextFrom';\nimport React, { useState } from 'react'\nimport Alert from './Components/Alert';\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n//   Link\n// } from \"react-router-dom\";\n\n\nfunction App() {\n  const [mode, setMode] = useState('light')\n  const [alert, setAlert] = useState(null)\n  \n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null)\n    }, 1500);\n  }\n\n  const toggleMode = () => {\n    if(mode === 'light'){\n      setMode('dark');\n      document.body.style.backgroundColor = '#27224a';\n      showAlert(\"Dark Mode has been enabled!\", \"success\");\n      document.title = 'TextApp - DarkMode';\n      // setInterval(() => {\n      //   document.title = 'TextApp is Amazing';\n      // }, 2000);\n      // setInterval(() => {\n      //   document.title = 'Install TextApp Now';\n      // }, 1500);\n    }\n    else{\n      setMode('light');\n      document.body.style.backgroundColor = '#cfd8ff';\n      showAlert(\"Dark Mode has been Disabled!\", \"success\");\n      document.getElementById('btn11').style.backgroundColor = '#0d6efd';\n      document.getElementById('btn12').style.backgroundColor = '#0d6efd';\n      document.getElementById('btn13').style.backgroundColor = '#0d6efd';\n      document.getElementById('btn14').style.backgroundColor = '#0d6efd';\n      document.getElementById('btn15').style.backgroundColor = '#0d6efd';\n      document.getElementById('btn16').style.backgroundColor = '#0d6efd';\n      document.title = 'TextApp - LightMode';\n    }\n  }\n  return (\n<>\n    {/* <Router> */}\n    <Navbar title=\"TextApp\" aboutTextApp=\"About TextApp\" mode={mode} toggleMode={toggleMode}/>\n    <Alert alert={alert}/>\n    <div className=\"container my-3\">\n    {/* <Switch>\n          <Route exact path=\"/about\">\n            <About />\n          </Route>\n          <Route exact path=\"/\"> */}\n          <TextFrom showAlert={showAlert} heading=\"Enter Your Text\" mode={mode}/>\n          {/* </Route>\n    </Switch> */}\n    </div>\n    {/* </Router> */}\n</>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}